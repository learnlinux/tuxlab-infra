---
  # This Playbook automatically deploys the TuxLab Application to AWS
  # by creating an Ansible Tower node. Be sure to set aws variables in
  # ./vars/aws_vars.yml file prior to execution.

  # Create AWS Enviornment
  - name: Configure EC2
    hosts: localhost
    connection: local
    remote_user: root
    gather_facts: no
    vars_files:
      - config.yml
    tasks:
      - name: Create AWS VPC
        include: aws/ec2_vpc.yml

      - name: Create AWS Keypair
        include: aws/ec2_key.yml

      - name: Create AWS Tower
        include: aws/ec2_tower.yml

      - name: Create Security Groups
        include: aws/ec2_groups.yml

      - name: Create Docker Swarm Node
        include: aws/ec2_dockerswarm.yml

# Configure Ansible Tower
  - name: Configure Ansible Tower
    hosts: ansible_tower
    remote_user: ubuntu
    gather_facts: no
    vars_files:
      - config.yml
    vars_prompt:
      - name: "ANSIBLE_TOWER_PASS"
        prompt: "New Ansible Tower password"
        private: yes
        confirm: yes
    tasks:
      - name: Configure Ansible Tower for AWS
        include: aws/ec2_tower_config.yml

# Run Callback on Swarm Manager
  - name: Configure Docker Swarm Node
    hosts: docker_swarm_manager
    gather_facts: no
    vars:
      ansible_ssh_user: core
      ansible_python_interpreter: "/home/core/bin/python"
    tasks:
      raw: "{{phone_home}}"

# Launch Autoscaling Groups
  - name: Launch Autoscaling Groups
    hosts: localhost
    connection: local
    remote_user: root
    gather_facts: no
    vars_files:
      - config.yml
    tasks:

      - name: Create Docker Host ASG
        include: aws/ec2_dockerhost.yml

      - name: Create Meteor ASG
        include: aws/ec2_meteor.yml
