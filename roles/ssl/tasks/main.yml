---

###############################
#    CREATE INTERMEDIATE CA   #
###############################
- name: check for existing ca
  stat: path="~/.tuxlab/ca"
  register: existing_ca
  delegate_to: localhost
  run_once: true

- name: Make CA Directory Structure
  file:
    path: "~/.tuxlab/{{ item.dir }}"
    state: directory
  with_items:
    - { dir: 'ca' }
    - { dir: 'ca/certs' }
    - { dir: 'ca/crl' }
    - { dir: 'ca/newcerts' }
    - { dir: 'ca/private' }
  delegate_to: localhost
  run_once: true
  when: existing_ca.stat.exists == False

- name: Create Index
  file:
    path: "~/.tuxlab/ca/index.txt"
    state: touch
  delegate_to: localhost
  run_once: true
  when: existing_ca.stat.exists == False

- name: Create Serial
  copy:
    content: "1000"
    dest: "~/.tuxlab/ca/serial"
  delegate_to: localhost
  run_once: true
  when: existing_ca.stat.exists == False

- name: Create OpenSSL.cnf
  template:
    src: openssl.cnf.j2
    dest: "~/.tuxlab/ca/openssl.cnf"
  delegate_to: localhost
  run_once: true
  when: existing_ca.stat.exists == False

- name: generate intermediate CA key
  command: >
    openssl genrsa -out ~/.tuxlab/ca/private/ca.key.pem 4096
  delegate_to: localhost
  run_once: true
  when: existing_ca.stat.exists == False

- name: self-sign intermediate CA key
  command: >
    openssl req -x509 -new -nodes
    -days 365
    -extensions v3_ca
    -subj "{{ SSL_SUBJ }}"
    -config ~/.tuxlab/ca/openssl.cnf
    -key ~/.tuxlab/ca/private/ca.key.pem
    -out ~/.tuxlab/ca/certs/ca.cert.pem
  delegate_to: localhost
  run_once: true
  when: existing_ca.stat.exists == False

###############################
#         CREATE CSR          #
###############################
# Create SSL Folder on hosts
- name: Create Key Directory
  become: yes
  file: path=/etc/ssl/local state=directory

- name: Add SANs to openssl.cnf
  become: yes
  lineinfile:
    dest: /etc/pki/tls/openssl.cnf
    insertafter: "^keyUsage = nonRepudiation, digitalSignature, keyEncipherment"
    regexp: "^subjectAltName="
    line: "subjectAltName=DNS:{{TUX_DOMAIN}},IP:127.0.0.1,IP:{{ansible_host}}"

- name: Enabling SAN extension in openssl.cnf
  become: yes
  lineinfile:
    dest: /etc/pki/tls/openssl.cnf
    regexp: "^# req_extensions"
    line: "req_extensions = v3_req"

- name: Generate Private Key and CSR
  become: yes
  command: >
    openssl req
    -newkey rsa:2048
    -nodes
    -subj "{{ SSL_SUBJ }}"
    -keyout /etc/ssl/local/host.pem
    -config /etc/pki/tls/openssl.cnf
  register: CSR

###############################
#          SIGN CSR           #
###############################
- name: Sign CSR
  shell: "echo '{{ CSR.stdout }}' | openssl ca -batch -config ./openssl.cnf -in /dev/stdin -extensions server_cert -notext -days 365"
  args:
    chdir: "~/.tuxlab/ca"
  delegate_to: localhost
  register: CRT

###############################
#      SAVE CERTIFICATES      #
###############################
- name: Copy Host Certificate
  become: yes
  copy: content="{{ CRT.stdout }}" dest=/etc/ssl/local/cert.pem

- name: Copy CA Certificate
  become: yes
  copy:
    src: ~/.tuxlab/ca/certs/ca.cert.pem
    dest: /etc/ssl/local/ca.pem
    owner: root
    group: root
    mode: 0644

# Symlink CA into trusted Certificates
- name: Symlink to Trusted Certificates
  become: yes
  file:
    src: /etc/ssl/local/ca.pem
    dest: /etc/pki/ca-trust/source/anchors/tuxlab.pem
    state: link

- name: Updated Trusted Certificates
  become: yes
  shell: update-ca-trust
